<project name='Format' basedir='..'>

	<property name='component' value='Format' />
	<property name='system_id' value='### Must be set by Jenkins ###' />

	<property name='app.name' value='${component}' />
	<property name='inputDir' value='${basedir}/${app.name}/Documentation' />
	<property name='language' value='### Must be set by Jenkins ###' />

	<property environment='env' />
	<import file='${env.RE_ANTLIBRARY_HOME}/ant-lib.xml' />

	<!--
		Component (platform-independent)
	-->

	<target name='Component.Format.execute' extensionOf='Component.execute'>

    <copy todir='${files_directory}/${component}'>
			<fileset dir='${basedir}/${component}'>
				<include name='Kernel/**' />
				<include name='*.m' />
			</fileset>
		</copy>

	</target>

	<!--
			Paclet generation
	-->

	<target name='Paclet.Format.init.custom' extensionOf='Paclet.init.custom'>

		<!--
			Prevent Paclet.clean from deleting files_directory,
			since CopyAndUnarchiveArtifact just put all the paclet
			files in there....
		-->

		<property name='keep.files_directory' value='true' />

	</target>

	<target name='Paclet.Format.execute' extensionOf='Paclet.execute'>
		<mathematica exe="${mathExe}" fresh="true" quit="true"><![CDATA[

			Print["$Version: ", $Version];
			Print["$InstallationDirectory: ", $InstallationDirectory];

			Unset[$MessagePrePrint];
			Needs["PacletManager`"];

			src = FileNameJoin[{AntProperty["files_directory"], "Format"}];
			dest = FileNameJoin[AntProperty["output_directory"]];
			PackPaclet[src, dest];

			SetDirectory[dest]
			If [TrueQ[FileExistsQ[FileNames["Format*.paclet"][[1]]]],
				Print[FileNames["Format*.paclet"][[1]] " ... OK"],
				AntFail["Paclet not produced" ]];

		]]></mathematica>

	</target>

</project>
